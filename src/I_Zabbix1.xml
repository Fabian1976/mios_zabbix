<?xml version="1.0"?>
<implementation>
	<settings>
		<protocol>raw</protocol>
	</settings>
	<functions>
	
<!-- 		local lfs = require("lfs")

		function loadModule(moduleName)
			local srcFile = "/etc/cmh-ludl/" .. moduleName .. ".lua.lzo"
			local destFile = "/etc/cmh-ludl/" .. moduleName .. ".lua"
			local srcFileModified = lfs.attributes (srcFile, "modification")
			local destFileModified = lfs.attributes (destFile, "modification")
	
			luup.log("srcFile = " .. (srcFile or "nil"))
			luup.log("destFile = " .. (destFile or "nil"))
			luup.log("srcFileModified = " .. (srcFileModified or "nil"))
			luup.log("destFileModified = " .. (destFileModified or "nil"))
	
			if (not destFileModified or os.difftime(srcFileModified, destFileModified) > 0) then
				local tempFile = os.tmpname()
				local commandLine = "pluto-lzo d " .. srcFile .. " " .. tempFile
				luup.log ("commandLine = " .. commandLine)
				local result = os.execute(commandLine)
				luup.log ("os.execute result = " .. (result or "nil"))
				commandLine = "mv " .. tempFile .. " " .. destFile
				luup.log ("commandLine = " .. commandLine)
				result = os.execute(commandLine)
				luup.log ("os.execute result = " .. (result or "nil"))
			end
	
			return require(moduleName)
		end
	
	 -->	
	 
	 	g_dkjson = require("L_Zabbix_dkjson")
		g_log = require("L_Zabbix_log")
		g_util = require("L_Zabbix_util")
		g_core = require("L_Zabbix_core")

		function initialize(lul_device)
			g_core.initialize(lul_device)
		end
	</functions>
	<startup>initialize</startup>
	<actionList>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:Zabbix1</serviceId>
			<name>Refresh</name>
			<job>
				return core.refresh(lul_device, lul_settings, lul_job)
			</job>			
		</action>
	</actionList>
</implementation>